class WelcomeController < ApplicationController
    
    # this file was generated by running the command:
    # rails g controller welcome
    
    # insied of controller every instance method is called an action
    def geo
        require 'uri'
        require 'net/http'
        
        uri = URI('http://api.positionstack.com/v1/forward')
        
        params = {
            'access_key' => 'd6000fb6c28e600a1bedf536adbf2c1a',
            'query' => 'Burnaby, British Columbia, Canada',
            'limit' => 1
        }
        
        uri.query = URI.encode_www_form(params)
        
        response = Net::HTTP.get_response(uri)
        
        puts response.read_body
        
        @geo=response.read_body
    end    

    def openvss       
        IO.popen(["node", "open_vss.js", :err=>[:child, :out]]) {|ls_io|
             @ls_result_with_error = ls_io.read 
         }
       
    end

    def index
          IO.popen(["node", "mini_welcome.js", :err=>[:child, :out]]) {|ls_io|
              @ls_result_with_error = ls_io.read 
          }
        
        #byebug
        # IO.popen(["node", "renderer.js", :err=>[:child, :out]]) {|ls_io|
        # @ls_result_with_error = ls_io.read 
        # }
        # IO.popen(["node", "play_sound.js", :err=>[:child, :out]]) {|ls_io|
        # @ls_result_with_error = ls_io.read 
        # }
        # by default rails will render a template within
        # views/welcome folder, this welcome is the controller name
        # this action will render out the file views/welcome/index.html.erb
    end

    def writecode       
        IO.popen(["node", "writecode.js", :err=>[:child, :out]]) {|ls_io|
             @ls_result_with_error = ls_io.read 
         }
    end

    def choosefile     
       # byebug  
        IO.popen(["node", "choosefile.js", :err=>[:child, :out]]) {|ls_io|
             @ls_result_with_error = ls_io.read 
         }
    end

    def runcode       
        IO.popen(["node", "runcode.js", :err=>[:child, :out]]) {|ls_io|
             @ls_result_with_error = ls_io.read 
         }
    end
    
    def goodbye
          
    end
    
    
    def form_example
        
    end
    def front
        
    end
end
